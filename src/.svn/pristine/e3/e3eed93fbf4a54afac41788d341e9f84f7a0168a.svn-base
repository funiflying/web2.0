/**
 * Created by Administrator on 2016/2/18.
 */
angular.module('chetongxiang.directives', []).directive('uploader', ['UploaderService', 'ResourceService', function (UploaderService, ResourceService) {
//
    return {
        restrict: 'AE',
        replace: false,
        templateUrl: './statics/uploader.html',
        link: function (scope, element, attr) {
            var $elem = $(element);
            var $btn = $(element).find('.filePicker');
            $elem.on('click', '.kv-file-remove',function (e) {

                var params={
                    CarPicID:$(e.target).parents('.file-preview-frame').attr('id')
                };
                if(params.CarPicID=='undefined'){
                    $(e.target).parents('.file-preview-frame').remove();
                    var length = $elem.find('.file-preview-frame').length;
                    if (length == 0) {
                        $elem.find('.file-drop-zone-title').show();
                    }
                }
                else if(params.CarPicID!='undefined') {
                    ResourceService.getFunServer('deletecarimg',params,'post').then(function(data){
                        if(data.status==1){
                            $(e.target).parents('.file-preview-frame').remove();
                            var length = $elem.find('.file-preview-frame').length;
                            if (length == 0) {
                                $elem.find('.file-drop-zone-title').show();
                            }
                            $elem.find('.gridly').gridly({
                                base: 40,
                                gutter: 0,
                                columns:18
                            });
                        }
                    })
                }
            });
            // 初始化Web Uploader
            var uploader = WebUploader.create({
                // 选完文件后，是否自动上传。
                auto: true,
                // swf文件路径
                swf: './lib/webuploader-0.1.5/Uploader.swf',
                // 文件接收服务端。
                server: attr.action,
                // 选择文件的按钮。可选。
                // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                pick: $btn,
                compress: false,
                // 只允许选择图片文件。
                accept: {
                    title: 'Images',
                    extensions: 'gif,jpg,jpeg,bmp,png',
                    mimeTypes: 'image/*'
                },
                fileNumLimit: attr.limit
            });
            // 当有文件添加进来的时候
            uploader.on('fileQueued', function (file) {
                var $li = $('<div class="file-preview-frame col-md-3" id="' + file.id + '">' +
                    '<img style="width:200px;height:160px;"  class="file-preview-image" >' +
                    '<div class="file-thumbnail-footer">' +
                    '<div class="file-actions">' +
                    '<div class="file-footer-buttons"><span class="text-orange pull-left img-loading"><i class="glyphicon glyphicon-info-sign"></i> <span class="up-text">正在上传... </span><img src="./images/loading.gif" alt=""/></span>' +
                    '<button title="删除" class="kv-file-remove btn btn-xs btn-default pull-right" type="button">   <i class="glyphicon glyphicon-trash text-danger"></i>' +
                    '</button> <button title="上传" class="kv-file-upload btn btn-xs btn-default pull-right" type="button"><i class="glyphicon  glyphicon-upload text-info"></i></button>' +
                    '</div></div></div></div>');
                var $img = $li.find('.file-preview-image');
                $elem.find('.file-drop-zone-title').hide();
                if(attr.multi&&attr.multi=='true'){
                    $elem.find('.file-preview-thumbnails').append($li);
                }
                else{
                    $elem.find('.file-preview-thumbnails').html($li);
                }
                $elem.find('.gridly').gridly({
                    base: 40,
                    gutter: 0,
                    columns:18
                });
                // 创建缩略图
                // 如果为非图片文件，可以不用调用此方法。
                // thumbnailWidth x thumbnailHeight 为 100 x 100
                uploader.makeThumb(file, function (error, src) {
                    if (error) {
                        $img.replaceWith('<span>不能预览</span>');
                        return;
                    }
                    $img.attr('src', src);
                },1280, 800);
                $elem.find('.kv-file-remove').bind('click', function (e) {
                    var filename = $(this).parents('.file-preview-frame').data('path');
                    if (filename) {
                        ResourceService.getFunServer('delimg', {fileName: filename});
                    }
                    uploader.removeFile(file.id);
                    $(e.target).parents('.file-preview-frame').remove();
                    var length = $elem.find('.file-preview-frame').length;
                    if (length == 0) {
                        $elem.find('.file-drop-zone-title').show();
                    }
                });
                //重新上传
                $elem.find('.kv-file-upload').bind('click', function () {
                    uploader.retry(file);
                });
            });
            // 文件上传过程中创建进度条实时显示。
            uploader.on('uploadProgress', function (file, percentage) {

            });
            // 文件上传成功，给item添加成功class, 用样式标记上传成功。
            uploader.on('uploadSuccess', function (file, data) {
                $('#' + file.id).find('.file-preview-image').attr('src',data.data);
                $('#' + file.id).find('.img-loading').find('img').remove();
                $('#' + file.id).attr('data-path', data.data);
                $('#' + file.id).find('.img-loading').removeClass('text-orange').addClass('text-info');
                $('#' + file.id).find('.up-text').text('上传成功');
            });
            // 文件上传失败，显示上传出错。
            uploader.on('uploadError', function (file) {
                $('#' + file.id).find('.img-loading').find('img').remove();
                $('#' + file.id).find('.img-loading').removeClass('text-orange').addClass('text-danger');
                $('#' + file.id).find('.up-text').text('上传失败，请重试');
            });

            // 完成上传完了，成功或者失败
            uploader.on('uploadComplete', function (file) {

            });
        }
    }
}]).directive('gallery', ['UploaderService', 'ResourceService', function (UploaderService, ResourceService) {
   //
    return {
        restrict: 'AE',
        replace: false,
        templateUrl: './statics/gallery.html',
        link: function (scope, element, attr) {
            var $elem = $(element);
            var $btn = $(element).find('.filePicker');
            // 初始化Web Uploader
            var uploader = WebUploader.create({
                // 选完文件后，是否自动上传。
                auto: true,
                // swf文件路径
                swf: './lib/webuploader-0.1.5/Uploader.swf',
                // 文件接收服务端。
                server: attr.action,
                // 选择文件的按钮。可选。
                // 内部根据当前运行是创建，可能是input元素，也可能是flash.
                pick: $btn,
                compress: false,
                // 只允许选择图片文件。
                accept: {
                    title: 'Images',
                    extensions: 'gif,jpg,jpeg,bmp,png',
                    mimeTypes: 'image/*'
                },
                fileNumLimit: attr.limit
            });

            // 当有文件添加进来的时候
            uploader.on('fileQueued', function (file) {
                var $li = $('<div class="gallery-file-preview-frame" id="' + file.id + '">' +
                    '<img style="width:100%;height:200px;"  class="file-preview-image" >' +
                    '<div class="file-thumbnail-footer">' +
                    '<div class="file-actions">' +
                    '<div class="file-footer-buttons"><span class="text-orange pull-left img-loading"><i class="glyphicon glyphicon-info-sign"></i> <span class="up-text">正在上传... </span><img src="./images/loading.gif" alt=""/></span>' +
                    '<button title="删除" class="kv-file-remove btn btn-xs btn-default pull-right" type="button">   <i class="glyphicon glyphicon-trash text-danger"></i>' +
                    '</button> <button title="上传" class="kv-file-upload btn btn-xs btn-default pull-right" type="button"><i class="glyphicon  glyphicon-upload text-info"></i></button>' +
                    '</div> </div></div>' +
                    '<textarea class="form-control" placeholder="填写图片备注"></textarea>'+
                    '<div class="file-thumbnail-remark">' +
                    '<label class="checkbox-inline">'+
                    '<input type="radio" name="'+file.id+'"  value="0" > 基本照'+
                    '</label>'+
                    '<label class="checkbox-inline">'+
                    '<input type="radio" name="'+file.id+'"  value="1" > 手续照'+
                    '</label>'+
                    '<label class="checkbox-inline">'+
                    '<input type="radio" name="'+file.id+'" value="2" > 瑕疵照'+
                    '</label>'+
                    '<label class="checkbox-inline">'+
                    '<input type="radio" name="'+file.id+'"  value="3" > 泡水火烧照'+
                    '</label>'+
                    '</div>' +
                    '</div>');
                var $img = $li.find('.file-preview-image');
                $elem.find('.file-drop-zone-title').hide();
                $elem.find('.file-preview-thumbnails').append($li);
                // 如果为非图片文件，可以不用调用此方法。
                uploader.makeThumb(file, function (error, src) {
                    if (error) {
                        $img.replaceWith('<span>不能预览</span>');
                        return;
                    }
                    $img.attr('src', src);
                }, 800, 600);
                $elem.find('.kv-file-remove').bind('click', function (e) {
                    var filename = $(this).parents('.gallery-file-preview-frame').data('path');
                    if (filename) {
                        ResourceService.getFunServer('delimg', {fileName: filename});
                    }
                    uploader.removeFile (file.id);
                    $(e.target).parents('.gallery-file-preview-frame').remove();
                    var length = $elem.find('.gallery-file-preview-frame').length;
                    if (length == 0) {
                        $elem.find('.file-drop-zone-title').show();
                    }
                });
                //重新上传
                $elem.find('.kv-file-upload').bind('click', function () {
                    uploader.retry(file);
                });
                //分组
                $li.on('click','input[type=radio]',function(e){
                    var flag=$(this).val();
                    var $elem=$(this).parents('.gallery-file-preview-frame').clone(true);
                    var $parent=null;
                    var length=$(this).parents('.file-preview-thumbnails').find('.gallery-file-preview-frame').length;
                    switch (flag){
                        case '0':
                            $parent=$('#carpictures');
                            break;
                        case '1':
                            $parent=$('#procedure');
                            break;
                        case '2':
                            $parent=$('#abnormal');
                            break;
                        case '3':
                            $parent=$('#proof');
                            break;
                    }
                    $parent.find('.gridly').append($elem) ;
                    $('.gridly').gridly({
                        base: 60,
                        gutter: 10,
                        columns:15
                    });
                    $parent.find('.file-drop-zone-title').hide();
                    $p=$(this).parents('.gallery-file-preview-frame').parent().prev('.file-drop-zone-title');
                    $(this).parents('.gallery-file-preview-frame').remove();
                    if (length ==1) {
                        $p.show();
                    }
                    uploader.removeFile (file.id);
                });
            });
            // 文件上传过程中创建进度条实时显示。
            uploader.on('uploadProgress', function (file, percentage) {

            });
            // 文件上传成功，给item添加成功class, 用样式标记上传成功。
            uploader.on('uploadSuccess', function (file, data) {
                $('#' + file.id).find('.file-preview-image').attr('src',data.data);
                $('#' + file.id).find('.img-loading').find('img').remove();
                $('#' + file.id).attr('data-path', data.data);
                $('#' + file.id).find('.img-loading').removeClass('text-orange').addClass('text-info');
                $('#' + file.id).find('.up-text').text('上传成功');
            });
            // 文件上传失败，显示上传出错。
            uploader.on('uploadError', function (file) {
                $('#' + file.id).find('.img-loading').find('img').remove();
                $('#' + file.id).find('.img-loading').removeClass('text-orange').addClass('text-danger');
                $('#' + file.id).find('.up-text').text('上传失败，请重试');
            });

            // 完成上传完了，成功或者失败
            uploader.on('uploadComplete', function (file) {

            });
        }
    }
}]).directive('carColor', function () {
    //车辆颜色
    return {
        restrict: 'A',
        replace: false,
        link: function (scope, element, attr) {
            var elem = $(element).find('span');
            elem.bind('click', function () {
                scope.Color = $(this).attr('data-value');
                $(this).addClass('active').siblings().removeClass('active');
            })
        }
    }
}).directive('banklist', function () {
    //银行列表
    return {
        restrict: 'AE',
        replace: false,
        templateUrl: './statics/banklist.html',
        link: function (scope, element, attr) {
            var elem = $(element).find('.pl-item');
            elem.bind('click', function () {
                $(this).addClass('active').siblings().removeClass('active');
                scope.bank = $(this).data('bank');
            })
        }
    }
}).directive('toolTip', function () {
    //提示工具
    return {
        restrict: 'A',
        replace: false,
        link: function (scope, element, attr) {
            var option = {
                title: attr.title,
                placement: attr.tooltipPlacement,
                delay: {show: 500, hide: 500}
            }
            $(element).tooltip(option);
        }
    }
}).directive('tuiDiscout', function () {
    return {
        restrict: 'EA',
        link: function (scope, elem, attrs) {
            var element = elem[0];
            elem.find("input[type=checkbox]").bind('click', function () {
                var checked = $("input[name=discount]");
                var arr = [];
                var val = 0;
                angular.forEach(checked, function (obj, index) {
                    if (obj.checked) {
                        arr.push(obj.id);
                        val += parseFloat(obj.value);

                    }
                });
                if (val > scope.serviceFees) {
                    $("#Msg").text('您抵用券的总金额(￥' + val + ')已超过可抵服务费(￥' + scope.serviceFees + ')的金额');
                    val = scope.serviceFees;
                }
                else {
                    $("#Msg").text('');
                }
                $("#discountCount").text("￥" + val);
                $(".needpay").text("￥" + parseFloat(scope.order.PayTotal - val));
                scope.order.PayTotal = scope.order.PayTotal - val;
                scope.$parent.discount = arr;
            })
        },
        replace: false,
        templateUrl: ''
    }
}).directive('evaluate', ['$rootScope', function ($rootScope) {
    //评价
    return {
        restrict: 'EA',
        replace: false,
        template: '<div class="pj-container"><span class="pj-star-icon active" val="1" >星星</span>' +
        '<span class="pj-star-icon" val="2">星星</span>' +
        '<span class="pj-star-icon" val="3">星星</span>' +
        '<span class="pj-star-icon" val="4">星星</span>' +
        '<span class="pj-star-icon" val="5">星星</span></div>',
        link: function (scope, element, attr) {
            var elem = $(element[0]).find('.pj-star-icon')
            elem.bind('click', function () {
                var val = $(this).attr('val')
                var arr = $(this).parent('.pj-container').find('.pj-star-icon');
                var name = $(this).parent('.pj-container').parent('div').attr('data-name');
                scope[name] = val;
                arr.each(function (index, obj) {
                    var i = $(obj).attr('val');
                    if (i < val || i == val) {
                        $(this).addClass('active')
                    }
                    else {
                        $(this).removeClass('active')
                    }
                })
            })
        }
    }
}]).directive('autoComplete', function () {
    return {
        restict: 'A',
        replace: false,
        link: function (scope, element, attr) {
            $(element).AutoComplete({
                'width': "auto",
                'itemHeight': 30,
                'listStyle': 'custom',
                'data': "./data/brandlist-new.json",
                'ajaxDataType': 'json',
                'async': true,
                'matchHandler': function (keyword, data) {
                    return data.brandName.indexOf(keyword) > -1  // 匹配规则: 以输入框中的值开头且大小写敏感
                },
                'beforeLoadDataHandler': function (keyword) {
                    return setTimeout(function () {
                        return true;
                    }, 350)

                },
                'createItemHandler': function (index, data) {
                    return "<span class='text-info' style='display: block;line-height: 30px;padding-left: 15px'>" + data.brandName + "</span>"; // 文本显示为绿色，并在前后使用'--'包裹
                },
                'emphasisHandler': function (keyword, data) {

                    // var regex = RegExp("(" + keyword.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1") + ")", 'ig');
                    // data.brandName = data.brandName.replace(regex, "<span style='font-weight:bold;color:blue;'>$1</span>");
                },
                'afterSelectedHandler': function (data) {
                    if (window.location.href.indexOf('index.html') > -1) {
                        window.location.href = 'buy.html?' + 'Brand=' + data.brandID + '&BrandName=' + data.brandName;
                    }
                    else {
                        window.location.href = window.location.href.replace(location.search, '') + '?Brand=' + data.brandID + '&BrandName=' + data.brandName;
                    }

                }
            });
        }
    }
}).directive('brandlist', function () {
    //品牌列表
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = $(element);
            elem.hover(function () {
                $(this).addClass('active');
                $('#Allbrand').addClass('active')
            }, function () {
                $(this).removeClass('active');
                $('#Allbrand').removeClass('active')
            })
        }
    }
}).directive('carType', function () {
    //首页车源类型
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = $(element).find('a');
            elem.on('mouseover', function () {
                $(this).addClass('active').siblings().removeClass('active');
            });
        }
    }
}).directive('filterSelected', function ($rootScope) {
    //买车筛选
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = $(element);
            elem.on('click', 'a', function () {
                $(this).addClass('active').siblings().removeClass('active');
                var active = angular.element('.filter-content').find('a.active');
                var qs = QueryString();
                var href = '?q=0';
                angular.forEach(active, function (obj, index) {
                    var name = $(obj).data('name').replace(/(^\s*)|(\s*$)/g, "");
                    var val = $(obj).data('value');
                    if (val == 0) {
                        delete  qs[name]
                    }
                    else {
                        qs[name] = val;
                    }
                });
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });
        }
    }
}).directive('filterMore', function () {
    //更多
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var btn = $(element).find('.moreitem-btn');
            var box = $(element).find('.moreitem-box');
            var a = box.find('a');
            var label = $(element).find('.checkbox-inline');
            angular.forEach(a, function (obj, index) {
                var name = $(obj).data('name').replace(/(^\s*)|(\s*$)/g, "");
                var val = $(obj).data('value');
                if (scope.filter[name] == val) {
                    btn.find('a').text($(obj).text()).addClass('text-orange');
                    ;
                }
            });
            btn.hover(function () {
                $(element).addClass('active').siblings().removeClass('active');
                box.addClass('active').siblings().removeClass('active');
            }, function () {
                $(element).removeClass('active');
                box.removeClass('active');
            });
            box.hover(function () {
                $(element).addClass('active').siblings().removeClass('active');
                box.addClass('active').siblings().removeClass('active');
            }, function () {
                $(element).removeClass('active');
                box.removeClass('active');
            });
            a.bind('click', function () {
                btn.find('a').text($(this).text());
                $(this).addClass('active').siblings().removeClass('active');
                if ($(this).text() != '不限') {
                    btn.find('a').addClass('text-orange');
                } else {
                    btn.find('a').removeClass('text-orange');
                }
                var active = angular.element('.filter-content').find('a.active');
                var qs = QueryString();
                var href = '?q=0';
                angular.forEach(active, function (obj, index) {
                    var name = $(obj).data('name').replace(/(^\s*)|(\s*$)/g, "");
                    var val = $(obj).data('value');
                    if (val == 0) {
                        delete  qs[name]
                    }
                    else {
                        qs[name] = val;
                    }
                });
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });
            label.bind('click', function () {
                var qs = QueryString();
                var href = '?q=0';
                var input = $(this).find('input');
                angular.forEach(input, function (obj, index) {
                    var name = $(obj).data('name').replace(/(^\s*)|(\s*$)/g, "");
                    var val = $(obj).data('value');
                    if (obj.checked) {
                        qs[name] = val;
                    }
                    else {
                        delete qs[name]
                    }
                });
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });

        }
    }
}).directive('allbrand', function () {
    //全部品牌
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var btn = $(element).find('.show');
            var box = $(element).find('.otherbrand');
            var a = box.find('a');
            $(element).hover(function () {
                box.addClass('active');
            }, function () {
                box.removeClass('active');
            });

        }
    }
}).directive('filterbrand', function () {
    //选择品牌
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = $(element).find('a');
            elem.on('click', function () {
                $(this).addClass('active').siblings().removeClass('active');
                var qs = QueryString();
                var href = '?q=0';
                var name = $(this).data('name').replace(/(^\s*)|(\s*$)/g, "");
                var val = $(this).data('value');
                delete  qs.Series;
                if (val == 0) {
                    delete  qs[name];
                    delete qs.BrandName;
                }
                else {
                    qs.BrandName = $(this).text();
                    qs[name] = val;
                }
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });
        }
    }
}).directive('filterseries', function () {
    //选择车系
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', 'a', function () {
                $(this).addClass('active').siblings().removeClass('active');
                var qs = QueryString();
                var href = '?q=0';
                var name = $(this).data('name').replace(/(^\s*)|(\s*$)/g, "");
                var val = $(this).data('value');
                if (val == 0) {
                    delete  qs[name];
                }
                else {
                    qs.BrandName = $(this).data('brandname');
                    qs.Brand = $(this).data('brand');
                    qs[name] = val;
                }
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });

        }
    }
}).directive('morebrand', function () {
    //全部品牌
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var statics = $(element).find('a.statics-brand')
            var i = 0;
            angular.forEach(statics, function (obj, index) {
                var value = $(obj).data('value');
                if (value == scope.filter.Brand || scope.filter.Brand == null) {
                    i += 1
                }
            });
            if (i == 0) {
                $a = $('<a data-name="Brand" data-value="' + scope.filter.Brand + '"   class="statics-brand active">' + scope.filter.BrandName + '</a>');
                $('#morebrand').before($a);

            }
        }
    }
}).directive('filtersort', function () {
    //排序
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', 'li', function () {
                $(this).addClass('active').siblings().removeClass('active');
                var qs = QueryString();
                var href = '?q=0';
                var val = parseInt($(this).data('value'));
                var sort = parseInt(qs['Sort']);
                if (isNaN(sort)) {
                    if (!isNaN(val)) {
                        qs['Sort'] = val;
                    } else {
                        delete  qs['Sort']
                    }
                } else {
                    if (sort > 0) {
                        qs['Sort'] = -val;
                    } else {
                        qs['Sort'] = val;
                    }
                }
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });

        }
    }
}).directive('filter', function () {
    //全部查询条件
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var QS = QueryString();
            if (QS.CarNo) {
                var a = '<a href=""  class="filter-a" data-name="CarNo">' + QS.CarNo + '</a>'
                $('.filter-reset').before(a);
            }
            setTimeout(function () {
                var elem = $(element[0]).find('a.active');
                angular.forEach(elem, function (obj, index) {
                    if ($(obj).text() !== '不限') {
                        var a = '<a href="javascript:void(0)"  class="filter-a" data-name="' + $(obj).data('name') + '">' + $(obj).text() + '</a>';
                        var span='<span>'+ $(obj).text()+'</span>'
                        $('.filter-reset').before(a);
                        $('#word').append(span)
                    }
                });
                $('.filter-a').on('click', function () {
                    var name = $(this).data('name');
                    if (name == 'Brand') {
                        delete  QS['BrandName'];
                        delete  QS['Series'];
                    }
                    delete  QS[name];
                    var href = '?q=0';
                    for (var obj in QS) {
                        if (obj != 'q') {
                            href += '&' + obj + '=' + QS[obj];
                        }
                    }
                    window.location.href = window.location.href.replace(location.search, '') + href;
                })
            }, 1000)
        }
    }
}).directive('changeCity', ['$rootScope', 'CookieService', function ($rootScope, CookieService) {
    //更改城市车源
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var btn = $(element).find('.choose-city');
            var box = $(element).find('.city-box');
            btn.hover(function () {
                $(element).addClass('active');
                box.addClass('active');
            }, function () {
                $(element).removeClass('active');
                box.removeClass('active');
            });
            box.hover(function () {
                $(element).addClass('active');
                box.addClass('active');
            }, function () {
                $(element).removeClass('active');
                box.removeClass('active');
            });
            box.on('click', 'a', function () {
                $(this).addClass('active').siblings().removeClass('active');
                CookieService.SetCityCookie({CityName: $(this).data('city'), CityID: $(this).data('value')});
                var active = angular.element('.filter-content').find('a.active');
                var qs = QueryString();
                var href = '?q=0';
                angular.forEach(active, function (obj, index) {
                    var name = $(obj).data('name');
                    var val = $(obj).data('value');
                    if (val == 0) {
                        delete  qs[name]
                    }
                    else {
                        qs[name] = val;
                    }
                });
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });
        }
    }


}]).directive('paybanklist', ['PayService', '$rootScope', function (PayService, $rootScope) {
    return {
        restrict: 'EA',
        transclude: true,
        link: function (scope, elem, attrs) {
            var obj = {
                orderCode: null,
                bank_code: null,
                pay_type: null
            };
            $(document).on("click", ".payment-list li", function () {
                var bank = $(this).data('name');
                $(this).addClass('active').siblings().removeClass('active');
                var typedata = $(this).attr("type-data");
                scope.$apply(function () {
                    scope.bank = bank;
                    scope.selectedbank = scope.banklistdata[typedata];
                });
                obj = {
                    orderCode: scope.ordernum || null,
                    bank_code: scope.banklistdata[typedata].bankcode || null,
                    pay_type: null
                };
                $('input[name=bankcode]').val(scope.banklistdata[typedata].bankcode);
                $('input[name=banktype]').val('');

            });

            $('.payment_change').on("click", "a", function () {
                $(this).addClass('active').siblings().removeClass('active');
                $('input[name=banktype]').val($(this).data("value"));
                scope.pay();

            });
        },
        templateUrl: './statics/paylist.html',
        replace: false
    }
}]).directive('profess', function () {
    return {
        restrict: 'A',
        template: '',
        replace: false,
        link: function (scope, elem, attrs) {
            var elem = $(elem);
            elem.on('click', '.o-b-list a', function (e) {
                $(this).toggleClass('active');
                var id = $(this).data('value').toString().replace(/(^\s*)|(\s*$)/g, "");
                if ($(this).attr('class') == 'active') {
                    var p = '<a id="' + id + '">' + $(this).text() + '</a>';
                    elem.find('#selectBrand').append(p)
                }
                else {
                    elem.find('#' + id).remove()
                }
            })

        }
    }

}).directive('filterpeer', function () {
    //同行
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', 'li', function () {
                $(this).addClass('active').siblings().removeClass('active');
                var qs = QueryString();
                var href = '?q=0';
                var val = parseInt($(this).data('value'));
                var name = $(this).data('name');
                qs[name] = val;
                for (var obj in qs) {
                    if (obj != 'q') {
                        href += '&' + obj + '=' + qs[obj];
                    }
                }
                window.location.href = window.location.href.replace(location.search, '') + href;
            });
        }
    }
}).directive('detect', ['$rootScope', function ($rootScope) {

    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', 'i', function () {
                var value = parseInt($(this).attr('value'), 10);
                var id = $(this).attr('id');
                var _this = $(this);
                switch (value) {
                    case 1:
                        $(this).removeClass('glyphicon-exclamation-sign').addClass('glyphicon-ok-sign');
                        $(this).attr('value', 2);
                        $('.detect-accident-' + id).removeClass('active');
                        break;
                    case 2:
                        $(this).removeClass('glyphicon-ok-sign').addClass('glyphicon-exclamation-sign');
                        $(this).attr('value', 1);
                        $('.detect-accident-' + id).addClass('active');
                        break;
                }
            });
        }
    }
}]).directive('detectMultp', ['$rootScope', function ($rootScope) {

    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', 'i', function () {
                var value = parseInt($(this).attr('value'), 10);
                var id = $(this).attr('id');
                var _this = $(this);
                switch (value) {
                    case 1:
                        $(this).removeClass('glyphicon-exclamation-sign glyphicon-ok-sign').text('无');
                        $(this).attr('value', 0);
                        break;
                    case 2:
                        $(this).removeClass('glyphicon-ok-sign').addClass('glyphicon-exclamation-sign ');
                        $(this).attr('value', 1);
                        break;
                    case 0:
                        $(this).addClass('glyphicon-ok-sign').text('');
                        $(this).attr('value', 2);
                        break;
                }
            });
        }
    }
}]).directive('detectRepair', ['$rootScope', function ($rootScope) {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', '.repair', function (e) {
                var _this = $(this);
                var value = parseInt($(this).attr('value'), 10);
                var id = $(this).attr('id');
                var blue = 'carAIblue_' + id;
                var gh = 'carAIGH_' + id;
                var sc = 'carAISC_' + id;
                switch (value) {
                    case 0:
                        _this.addClass(blue).removeClass(gh);
                        _this.attr('value', 1);
                        break;
                    case 1:
                        _this.addClass(gh).removeClass(blue);
                        _this.attr('value', 2);
                        break;
                    case 2:
                        _this.removeClass(blue).removeClass(gh).addClass(sc);
                        _this.attr('value', 3);
                        break;
                    case 3:
                        _this.removeClass(blue).removeClass(gh).removeClass(sc);
                        _this.attr('value', 0);
                        break;
                }
            });
            $(elem).on('click', '.guaca', function (e) {
                var dot = $('<i class="e_guacha"></i>');
                var left = parseInt($(this).css('left'));
                var top = parseInt($(this).css('top'));
                $('.e_main').append(dot);
                dot.css({'left': e.offsetX + left - 55, 'top': e.offsetY + top - 35});
                dot.attr({'data-X': e.offsetX + left - 55, 'data-Y': e.offsetY + top - 35});

            });
            $(elem).on('click', '.pengzhuang', function (e) {
                var dot = $('<i class="e_pengzhuang"></i>');
                var left = parseInt($(this).css('left'));
                var top = parseInt($(this).css('top'));
                $('.e_main').append(dot);
                dot.css({'left': e.offsetX + left - 55, 'top': e.offsetY + top - 35});
                dot.attr({'data-X': e.offsetX + left - 55, 'data-Y': e.offsetY + top - 35});
            })
        }
    }
}]).directive('guaca', ['$rootScope', function ($rootScope) {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', function (e) {
                $('.e_main').css('z-index', '');
                $(this).addClass('active').siblings().removeClass('active');
                $('.carAIbg').addClass('guaca').removeClass('repair pengzhuang');
            });
        }
    }
}]).directive('peng', ['$rootScope', function ($rootScope) {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', function (e) {
                $('.e_main').css('z-index', '');
                $(this).addClass('active').siblings().removeClass('active');
                $('.carAIbg').addClass('pengzhuang').removeClass('repair guaca');
            });
        }
    }
}]).directive('repair', ['$rootScope', function ($rootScope) {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', function (e) {
                $('.e_main').css('z-index', '');
                $(this).addClass('active').siblings().removeClass('active');
                $('.carAIbg').addClass('repair').removeClass('guaca pengzhuang');
                $('.carNSbg').addClass('repair').removeClass('guaca pengzhuang');
            });
        }
    }
}]).directive('removeGuaca', function () {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', function (e) {
                $(this).addClass('active').siblings().removeClass('active');
                $('.carAIbg').removeClass('guaca pengzhuang');
                $('.e_main').css('z-index', '31');
            });
        }
    }
}).directive('eRemove', function () {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            var elem = element[0];
            $(elem).on('click', 'i', function (e) {
                $(this).remove();
            });
        }
    }
}).directive('navFix', function () {
    return {
        restrict: 'AE',
        replace: false,
        link: function (scope, element, attr) {
            $(element).on('click','li',function(){
                var id=$(this).find('a').attr('href');
                var top=$(id)[0].offsetTop-10;
                $('body').animate({scrollTop:top},1500)
            });

        }
    }
}).directive('viewReport', function () {
    return {
        restrict: 'AE',
        replace: false,
        templateUrl:'./admin/view-report.html'
    }
}).directive('unknowSpec', function () {
    return {
        restrict: 'AE',
        replace: false,
       link:function(scope, element, attr){
            var $elem=$(element);
           $elem.on('change','#nospac',function(){
               if(this.checked){
                   var reg=new RegExp("[\\u4E00-\\u9FFF]+","g");
                   var index=scope.spec.SpecName.lastIndexOf(' ');
                   var sub=scope.spec.SpecName.substr(index+1);
                   if(reg.test(sub)){
                       $('#spacname').text(scope.spec.SpecName.substring(0,index));
                       scope.SpecName=scope.spec.SpecName.substring(0,index);
                   }
               }
               else{
                   $('#spacname').text(scope.spec.SpecName);
                   scope.SpecName=scope.spec.SpecName;
               }
           })

       }
    }
})